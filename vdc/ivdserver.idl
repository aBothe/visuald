// This file is part of Visual D
//
// Visual D integrates the D programming language into Visual Studio
// Copyright (c) 2012 by Rainer Schuetze, All Rights Reserved
//
// Distributed under the Boost Software License, Version 1.0.
// See accompanying file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt

// bring in core IDL files
import "oaidl.idl";

[
	object,
	uuid(002a2de9-8bb6-484d-9901-7e4ad4084715),
	dual,
	nonextensible,
	helpstring("IVDServer Interface"),
	pointer_default(unique)
]
interface IVDServer : IUnknown
{
	HRESULT ConfigureSemanticProject([in] BSTR filename, [in] BSTR imp, [in] BSTR stringImp, [in] BSTR versionids, [in] BSTR debugids, [in] DWORD flags);
	HRESULT ClearSemanticProject();
	HRESULT UpdateModule([in] BSTR filename, [in] BSTR srcText, [in] BOOL verbose);
	HRESULT GetTip([in] BSTR filename, [in] DWORD startLine, [in] DWORD startIndex, [in] DWORD endLine, [in] DWORD endIndex);
	HRESULT GetTipResult([out] DWORD *startLine, [out] DWORD *startIndex, [out] DWORD *endLine, [out] DWORD *endIndex, [out,retval] BSTR* answer);
	HRESULT GetSemanticExpansions([in] BSTR filename, [in] BSTR tok, [in] DWORD line, [in] DWORD idx, [in] BSTR expr);
	HRESULT GetSemanticExpansionsResult([out,retval] BSTR* stringList);
	HRESULT IsBinaryOperator([in] BSTR filename, [in] DWORD startLine, [in] DWORD startIndex, [in] DWORD endLine, [in] DWORD endIndex, [out,retval] BOOL* pIsOp);
	HRESULT GetParseErrors([in] BSTR filename, [out,retval] BSTR* errors);
	HRESULT GetBinaryIsInLocations([in] BSTR filename, [out,retval] VARIANT* locs); // array of pairs of DWORD
	HRESULT GetLastMessage([out,retval] BSTR* message);
	HRESULT GetDefinition([in] BSTR filename, [in] DWORD startLine, [in] DWORD startIndex, [in] DWORD endLine, [in] DWORD endIndex);
	HRESULT GetDefinitionResult([out] DWORD *startLine, [out] DWORD *startIndex, [out] DWORD *endLine, [out] DWORD *endIndex, [out,retval] BSTR* filename);
	HRESULT GetReferences([in] BSTR filename, [in] BSTR tok, [in] DWORD line, [in] DWORD idx, [in] BSTR expr);
	HRESULT GetReferencesResult([out,retval] BSTR* stringList);
	HRESULT ConfigureCommentTasks([in] BSTR tasks);
	HRESULT GetCommentTasks([in] BSTR filename, [out,retval] BSTR* tasks);
};

